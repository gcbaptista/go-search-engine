{
  "description": "Examples of Algolia-inspired filter expressions with AND/OR logic and scoring",
  "examples": [
    {
      "name": "Simple OR Filter",
      "description": "Match documents with either Action OR Comedy genre",
      "query": {
        "query": "movie",
        "filter_expression": {
          "operator": "OR",
          "filters": [
            {"field": "genre", "value": "Action", "score": 2.0},
            {"field": "genre", "value": "Comedy", "score": 1.5}
          ]
        }
      }
    },
    {
      "name": "Simple AND Filter",
      "description": "Match documents with Action genre AND premium status",
      "query": {
        "query": "movie",
        "filter_expression": {
          "operator": "AND",
          "filters": [
            {"field": "genre", "value": "Action", "score": 2.0},
            {"field": "is_premium", "value": true, "score": 3.0}
          ]
        }
      }
    },
    {
      "name": "Complex Nested Expression",
      "description": "Match (Action OR Comedy) AND (premium OR high rating)",
      "query": {
        "query": "movie",
        "filter_expression": {
          "operator": "AND",
          "groups": [
            {
              "operator": "OR",
              "filters": [
                {"field": "genre", "value": "Action", "score": 2.0},
                {"field": "genre", "value": "Comedy", "score": 1.5}
              ]
            },
            {
              "operator": "OR",
              "filters": [
                {"field": "is_premium", "value": true, "score": 3.0},
                {"field": "rating", "operator": "_gte", "value": 8.0, "score": 2.5}
              ]
            }
          ]
        }
      }
    },
    {
      "name": "Array Field Filtering",
      "description": "Match documents with specific platform filters",
      "query": {
        "query": "content",
        "filter_expression": {
          "operator": "OR",
          "filters": [
            {"field": "filters", "operator": "_contains", "value": "plat_pc_dev_computer", "score": 2.0},
            {"field": "filters", "operator": "_contains", "value": "plat_dev_all", "score": 1.0}
          ]
        }
      }
    },
    {
      "name": "Algolia-Inspired Complex Query",
      "description": "Real-world example inspired by Algolia's complex filter syntax",
      "query": {
        "query": "thriller",
        "filter_expression": {
          "operator": "AND",
          "groups": [
            {
              "operator": "OR",
              "filters": [
                {"field": "suggestionType", "value": "programme", "score": 0.5},
                {"field": "suggestionType", "value": "series", "score": 0.5}
              ]
            },
            {
              "operator": "OR",
              "filters": [
                {"field": "filters", "operator": "_contains", "value": "plat_pc_dev_computer", "score": 1.0},
                {"field": "filters", "operator": "_contains", "value": "plat_dev_all", "score": 1.0}
              ]
            },
            {
              "operator": "OR",
              "filters": [
                {"field": "filters", "operator": "_contains", "value": "prop_nbcuott", "score": 0.8},
                {"field": "filters", "operator": "_contains", "value": "prop_all", "score": 0.8}
              ]
            },
            {
              "operator": "OR",
              "filters": [
                {"field": "filters", "operator": "_contains", "value": "content_format_longform", "score": 0.6},
                {"field": "filters", "operator": "_contains", "value": "content_format_trailer", "score": 0.6}
              ]
            },
            {
              "operator": "OR",
              "filters": [
                {"field": "filters", "operator": "_contains", "value": "no_broadcast_region_required", "score": 0.4},
                {"field": "filters", "operator": "_contains", "value": "rgn_all", "score": 0.4}
              ]
            }
          ]
        }
      }
    },
    {
      "name": "Mixed Legacy and Expression Filters",
      "description": "Combining legacy simple filters with new filter expressions",
      "query": {
        "query": "movie",
        "filters": {
          "year_gte": 2020
        },
        "filter_scoring": {
          "year_gte": 1.0
        },
        "filter_expression": {
          "operator": "OR",
          "filters": [
            {"field": "genre", "value": "Action", "score": 2.0},
            {"field": "genre", "value": "Comedy", "score": 1.5}
          ]
        }
      }
    },
    {
      "name": "Multi-Search with Filter Expressions",
      "description": "Using filter expressions in multi-search queries",
      "query": {
        "queries": [
          {
            "name": "premium_content",
            "query": "action",
            "filter_expression": {
              "operator": "AND",
              "filters": [
                {"field": "genre", "value": "Action", "score": 2.0},
                {"field": "is_premium", "value": true, "score": 5.0}
              ]
            }
          },
          {
            "name": "platform_specific",
            "query": "comedy",
            "filter_expression": {
              "operator": "OR",
              "filters": [
                {"field": "filters", "operator": "_contains", "value": "plat_pc_dev_computer", "score": 1.0},
                {"field": "filters", "operator": "_contains", "value": "plat_mobile_dev_phone", "score": 0.8}
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Filter Scoring with Ranking",
      "description": "Using filter scores in ranking criteria",
      "index_settings": {
        "ranking_criteria": [
          {"field": "~filters", "order": "desc"},
          {"field": "~score", "order": "desc"},
          {"field": "year", "order": "desc"}
        ]
      },
      "query": {
        "query": "movie",
        "filter_expression": {
          "operator": "OR",
          "filters": [
            {"field": "genre", "value": "Action", "score": 5.0},
            {"field": "genre", "value": "Comedy", "score": 3.0},
            {"field": "genre", "value": "Drama", "score": 2.0}
          ]
        }
      }
    }
  ],
  "supported_operators": [
    "_exact",
    "_contains",
    "_gte",
    "_gt", 
    "_lte",
    "_lt",
    "_ne",
    "_ncontains",
    "_contains_any_of"
  ],
  "scoring_notes": [
    "In OR groups, scores from all matching conditions are summed",
    "In AND groups, all conditions must match, then all scores are summed",
    "Filter scores are added to the hit_info.filter_score field",
    "Use ~filters ranking criterion to sort by filter scores",
    "Legacy filters and filter expressions can be combined in the same query"
  ]
} 